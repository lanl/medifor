# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from medifor.v1 import analytic_pb2 as medifor_dot_v1_dot_analytic__pb2
from medifor.v1 import pipeline_pb2 as medifor_dot_v1_dot_pipeline__pb2


class PipelineStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Detect = channel.unary_unary(
                '/mediforproto.Pipeline/Detect',
                request_serializer=medifor_dot_v1_dot_pipeline__pb2.DetectionRequest.SerializeToString,
                response_deserializer=medifor_dot_v1_dot_pipeline__pb2.DetectionInfo.FromString,
                )
        self.GetDetectionInfo = channel.unary_unary(
                '/mediforproto.Pipeline/GetDetectionInfo',
                request_serializer=medifor_dot_v1_dot_pipeline__pb2.DetectionInfoRequest.SerializeToString,
                response_deserializer=medifor_dot_v1_dot_pipeline__pb2.DetectionInfo.FromString,
                )
        self.GetDetectionList = channel.unary_unary(
                '/mediforproto.Pipeline/GetDetectionList',
                request_serializer=medifor_dot_v1_dot_pipeline__pb2.DetectionListRequest.SerializeToString,
                response_deserializer=medifor_dot_v1_dot_pipeline__pb2.DetectionList.FromString,
                )
        self.DeleteDetection = channel.unary_unary(
                '/mediforproto.Pipeline/DeleteDetection',
                request_serializer=medifor_dot_v1_dot_pipeline__pb2.DeleteDetectionRequest.SerializeToString,
                response_deserializer=medifor_dot_v1_dot_analytic__pb2.Empty.FromString,
                )
        self.Fuse = channel.unary_unary(
                '/mediforproto.Pipeline/Fuse',
                request_serializer=medifor_dot_v1_dot_pipeline__pb2.FusionRequest.SerializeToString,
                response_deserializer=medifor_dot_v1_dot_pipeline__pb2.FusionInfo.FromString,
                )
        self.FuseByID = channel.unary_unary(
                '/mediforproto.Pipeline/FuseByID',
                request_serializer=medifor_dot_v1_dot_pipeline__pb2.FusionRequest.SerializeToString,
                response_deserializer=medifor_dot_v1_dot_pipeline__pb2.FusionInfo.FromString,
                )
        self.FuseAllIDs = channel.unary_unary(
                '/mediforproto.Pipeline/FuseAllIDs',
                request_serializer=medifor_dot_v1_dot_pipeline__pb2.FuseAllIDsRequest.SerializeToString,
                response_deserializer=medifor_dot_v1_dot_pipeline__pb2.FuseAllIDsResponse.FromString,
                )
        self.UpdateDetectionTags = channel.unary_unary(
                '/mediforproto.Pipeline/UpdateDetectionTags',
                request_serializer=medifor_dot_v1_dot_pipeline__pb2.UpdateDetectionTagsRequest.SerializeToString,
                response_deserializer=medifor_dot_v1_dot_pipeline__pb2.DetectionInfo.FromString,
                )
        self.GetDetectionTagInfo = channel.unary_unary(
                '/mediforproto.Pipeline/GetDetectionTagInfo',
                request_serializer=medifor_dot_v1_dot_pipeline__pb2.DetectionTagInfoRequest.SerializeToString,
                response_deserializer=medifor_dot_v1_dot_pipeline__pb2.DetectionTagInfo.FromString,
                )
        self.GetAnalyticMeta = channel.unary_unary(
                '/mediforproto.Pipeline/GetAnalyticMeta',
                request_serializer=medifor_dot_v1_dot_analytic__pb2.Empty.SerializeToString,
                response_deserializer=medifor_dot_v1_dot_pipeline__pb2.AnalyticList.FromString,
                )


class PipelineServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Detect(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDetectionInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDetectionList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteDetection(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Fuse(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FuseByID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FuseAllIDs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateDetectionTags(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDetectionTagInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAnalyticMeta(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PipelineServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Detect': grpc.unary_unary_rpc_method_handler(
                    servicer.Detect,
                    request_deserializer=medifor_dot_v1_dot_pipeline__pb2.DetectionRequest.FromString,
                    response_serializer=medifor_dot_v1_dot_pipeline__pb2.DetectionInfo.SerializeToString,
            ),
            'GetDetectionInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDetectionInfo,
                    request_deserializer=medifor_dot_v1_dot_pipeline__pb2.DetectionInfoRequest.FromString,
                    response_serializer=medifor_dot_v1_dot_pipeline__pb2.DetectionInfo.SerializeToString,
            ),
            'GetDetectionList': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDetectionList,
                    request_deserializer=medifor_dot_v1_dot_pipeline__pb2.DetectionListRequest.FromString,
                    response_serializer=medifor_dot_v1_dot_pipeline__pb2.DetectionList.SerializeToString,
            ),
            'DeleteDetection': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteDetection,
                    request_deserializer=medifor_dot_v1_dot_pipeline__pb2.DeleteDetectionRequest.FromString,
                    response_serializer=medifor_dot_v1_dot_analytic__pb2.Empty.SerializeToString,
            ),
            'Fuse': grpc.unary_unary_rpc_method_handler(
                    servicer.Fuse,
                    request_deserializer=medifor_dot_v1_dot_pipeline__pb2.FusionRequest.FromString,
                    response_serializer=medifor_dot_v1_dot_pipeline__pb2.FusionInfo.SerializeToString,
            ),
            'FuseByID': grpc.unary_unary_rpc_method_handler(
                    servicer.FuseByID,
                    request_deserializer=medifor_dot_v1_dot_pipeline__pb2.FusionRequest.FromString,
                    response_serializer=medifor_dot_v1_dot_pipeline__pb2.FusionInfo.SerializeToString,
            ),
            'FuseAllIDs': grpc.unary_unary_rpc_method_handler(
                    servicer.FuseAllIDs,
                    request_deserializer=medifor_dot_v1_dot_pipeline__pb2.FuseAllIDsRequest.FromString,
                    response_serializer=medifor_dot_v1_dot_pipeline__pb2.FuseAllIDsResponse.SerializeToString,
            ),
            'UpdateDetectionTags': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateDetectionTags,
                    request_deserializer=medifor_dot_v1_dot_pipeline__pb2.UpdateDetectionTagsRequest.FromString,
                    response_serializer=medifor_dot_v1_dot_pipeline__pb2.DetectionInfo.SerializeToString,
            ),
            'GetDetectionTagInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDetectionTagInfo,
                    request_deserializer=medifor_dot_v1_dot_pipeline__pb2.DetectionTagInfoRequest.FromString,
                    response_serializer=medifor_dot_v1_dot_pipeline__pb2.DetectionTagInfo.SerializeToString,
            ),
            'GetAnalyticMeta': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAnalyticMeta,
                    request_deserializer=medifor_dot_v1_dot_analytic__pb2.Empty.FromString,
                    response_serializer=medifor_dot_v1_dot_pipeline__pb2.AnalyticList.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'mediforproto.Pipeline', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Pipeline(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Detect(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mediforproto.Pipeline/Detect',
            medifor_dot_v1_dot_pipeline__pb2.DetectionRequest.SerializeToString,
            medifor_dot_v1_dot_pipeline__pb2.DetectionInfo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDetectionInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mediforproto.Pipeline/GetDetectionInfo',
            medifor_dot_v1_dot_pipeline__pb2.DetectionInfoRequest.SerializeToString,
            medifor_dot_v1_dot_pipeline__pb2.DetectionInfo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDetectionList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mediforproto.Pipeline/GetDetectionList',
            medifor_dot_v1_dot_pipeline__pb2.DetectionListRequest.SerializeToString,
            medifor_dot_v1_dot_pipeline__pb2.DetectionList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteDetection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mediforproto.Pipeline/DeleteDetection',
            medifor_dot_v1_dot_pipeline__pb2.DeleteDetectionRequest.SerializeToString,
            medifor_dot_v1_dot_analytic__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Fuse(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mediforproto.Pipeline/Fuse',
            medifor_dot_v1_dot_pipeline__pb2.FusionRequest.SerializeToString,
            medifor_dot_v1_dot_pipeline__pb2.FusionInfo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FuseByID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mediforproto.Pipeline/FuseByID',
            medifor_dot_v1_dot_pipeline__pb2.FusionRequest.SerializeToString,
            medifor_dot_v1_dot_pipeline__pb2.FusionInfo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FuseAllIDs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mediforproto.Pipeline/FuseAllIDs',
            medifor_dot_v1_dot_pipeline__pb2.FuseAllIDsRequest.SerializeToString,
            medifor_dot_v1_dot_pipeline__pb2.FuseAllIDsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateDetectionTags(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mediforproto.Pipeline/UpdateDetectionTags',
            medifor_dot_v1_dot_pipeline__pb2.UpdateDetectionTagsRequest.SerializeToString,
            medifor_dot_v1_dot_pipeline__pb2.DetectionInfo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDetectionTagInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mediforproto.Pipeline/GetDetectionTagInfo',
            medifor_dot_v1_dot_pipeline__pb2.DetectionTagInfoRequest.SerializeToString,
            medifor_dot_v1_dot_pipeline__pb2.DetectionTagInfo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAnalyticMeta(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mediforproto.Pipeline/GetAnalyticMeta',
            medifor_dot_v1_dot_analytic__pb2.Empty.SerializeToString,
            medifor_dot_v1_dot_pipeline__pb2.AnalyticList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
